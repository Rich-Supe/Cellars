  "scripts": {
    "start": "per-env",
    "start:development": "nodemon --delay 2.5 -r dotenv/config ./bin/www",
    "start:production": "node ./bin/www",
    "db:migrate": "dotenv sequelize-cli db:migrate",
    "db:migrate:undo:all": "dotenv sequelize-cli db:migrate:undo:all",
    "db:redo": "npm run db:seed:undo:all && npm run db:migrate:undo:all && npm run db:migrate && npm run db:seed:all",
    "db:seed:all": "dotenv sequelize-cli db:seed:all",
    "db:seed:undo:all": "dotenv sequelize-cli db:seed:undo:all"
  },

  Better Version:

"scripts": {
    "db:create": "dotenv sequelize-cli db:create",
    "db:drop": "dotenv sequelize-cli db:drop",
    "db:migrate": "dotenv sequelize-cli db:migrate",
    "db:migrate:undo:all": "dotenv sequelize-cli db:migrate:undo:all",
    "db:redo": "npm run db:seed:undo:all && npm run db:migrate:undo:all && npm run db:migrate && npm run db:seed:all",
    "db:seed:all": "dotenv sequelize-cli db:seed:all",
    "db:seed:undo:all": "dotenv sequelize-cli db:seed:undo:all",
    "migration:generate": "sequelize-cli migration:generate",
    "model:generate": "sequelize-cli model:generate",
    "seed:generate": "sequelize-cli seed:generate",
    "start": "per-env",
    "start:development": "dotenv nodemon ./bin/www",
    "start:production": "dotenv ./bin/www"
  },



Github Workflow:

Make a new branch locally : git branch <name>
and git checkout <name> 

or

git checkout -b <name> into the created branch, 

Add a new branch per feature, use git branch to determine the current branch

After pushing a branch, open a pull request on Github
(deal with merge conflicts and double-check code)
Accept pull request & merge

checkout into master form the local repo

git pull origin master from Github

checkout into branch, finish feature before merging. 


Questions: 
Proxy placement in F/E package.json
Line spacing in settings/json

